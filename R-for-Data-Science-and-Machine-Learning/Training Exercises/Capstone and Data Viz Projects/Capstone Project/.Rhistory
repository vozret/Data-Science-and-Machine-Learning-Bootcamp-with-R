library(ggplot2)
df <- mtcars
# creating data and aesthetics layer
pl <- ggplot(data = df, aes(x=wt, y=mpg))
#geometry
(pl + geom_point())
# size, shape, alpha
(pl + geom_point(size=10))
# size, shape, alpha
# size - size of data points
# alpha - prozirnost
(pl + geom_point(size=5, alpha=0.5))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp)))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp)))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp)))
# sizing and shaping our point based on other features (parameters)
print(pl + geom_point(aes(size=hp)))
print(pl + geom_point(aes(size=hp)))
print(pl + geom_point(aes(size=cyl)))
print(pl + geom_point(aes(size=factor(cyl))))
print(pl + geom_point(aes(shape=factor(cyl)), size=5))
print(pl + geom_point(aes(shape=factor(cyl), color=factor(cyl)), size=5))
pl2 <- pl + geom_point(size=5, color="blue")
print(pl2)
# hexcodes
pl2 <- pl + geom_point(size=5, color="#43e8d8")
print(pl2)
pl2 <- pl + geom_point(aes(color=hp), size=5)
print(pl2)
pl2 <- pl + geom_point(size=5, color="#43e8d8")
pl2 + scale_color_gradient(low="blue", high="red")
print(pl2)
pl3 <- pl2 + scale_color_gradient(low="blue", high="red")
print(pl3)
pl2 <- pl + geom_point(aes(color=hp), size=5)
pl3 <- pl2 + scale_color_gradient(low="blue", high="red")
print(pl3)
setwd("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project")
batting <- read.csv("Batting.csv")
print(head(batting))
# check the structure
str(batting)
head(batting$AB)
head(batting$X2B)
# feature engineering
batting$BA <- batting$H / batting$AB
tail(batting$BA)
tail(batting$BA, 5)
# OBP
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
tail(batting$OBP, 5)
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
# SLUGGING PERCENTAGE
batting$SLG = (batting$X1B + 2*batting$X2B + 3*batting$X3B + 4*batting$HR) / batting$AB
str(batting)
sal <- read.csv("Salaries.csv")
summary(batting)
batting <- subset(batting, yearID >= 1995)
summary(batting)
source("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/money_bal_project.R")
batting <- read.csv("Batting.csv")
print(head(batting))
# check the structure
str(batting)
head(batting$AB)
head(batting$X2B)
# feature engineering
batting$BA <- batting$H / batting$AB
tail(batting$BA, 5)
# OBP
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
tail(batting$OBP, 5)
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
# SLUGGING PERCENTAGE
batting$SLG = (batting$X1B + 2*batting$X2B + 3*batting$X3B + 4*batting$HR) / batting$AB
str(batting)
sal <- read.csv("Salaries.csv")
summary(batting)
batting <- subset(batting, yearID >= 1985)
summary(batting)
# merging dfs
combo <- merge(bating, sal, by=c("playerID", "yearID"))
# merging dfs
combo <- merge(batting, sal, by=c("playerID", "yearID"))
summary(combo)
lost_players <- subset(combo, playerID %in% c("giambja01", "damonjo01", "saenzol01"))
lost_players
lost_players <- subset(lost_players, yearID == 2001)
lost_players <- subset(lost_players, yearID == 2001)
lost_players <- lost_players[,c("playerId", "H", "X2B", "X3B", "HR", "OBP", "SLG", "BA", "AB")]
lost_players <- lost_players[,c("playerID", "H", "X2B", "X3B", "HR", "OBP", "SLG", "BA", "AB")]
lost_players
combo <- subset(combo, yearID == 2001)
str(combo)
ggplot(combo, aes(x=OBP, y=salary)) + geom_point(size=2)
library(ggplot2)
ggplot(combo, aes(x=OBP, y=salary)) + geom_point(size=2)
combo <- subset(combo, salary < 8000000 & oBP > 0)
str(combo)
1469 / 3
combo <- subset(combo, AB >= 450)
str(combo)
library(dplyr)
head(arrange(combo, desc(OBP)), 10)
options <- head(arrange(combo, desc(OBP)), 10)
options[, c("playerID", "AB", "salary", "OBP")]
combo <- subset(combo, salary < 8000000 & oBP > 0)
combo <- subset(combo, AB >= 450)
options <- head(arrange(combo, desc(OBP)), 10)
options[, c("playerID", "AB", "salary", "OBP")]
source("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/money_bal_project.R")
batting <- read.csv("Batting.csv")
# feature engineering
batting$BA <- batting$H / batting$AB
# OBP
batting$OBP <- (batting$H + batting$BB + batting$HBP) / (batting$AB + batting$BB + batting$HBP + batting$SF)
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
# SLUGGING PERCENTAGE
batting$SLG = (batting$X1B + 2*batting$X2B + 3*batting$X3B + 4*batting$HR) / batting$AB
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
# SLUGGING PERCENTAGE
batting$SLG = (batting$X1B + 2*batting$X2B + 3*batting$X3B + 4*batting$HR) / batting$AB
sal <- read.csv("Salaries.csv")
batting <- subset(batting, yearID >= 1985)
# merging dfs
combo <- merge(batting, sal, by=c("playerID", "yearID"))
lost_players <- subset(combo, playerID %in% c("giambja01", "damonjo01", "saenzol01"))
lost_players <- subset(lost_players, yearID == 2001)
lost_players
combo <- subset(combo, yearID == 2001)
library(ggplot2)
ggplot(combo, aes(x=OBP, y=salary)) + geom_point(size=2)
combo <- subset(combo, salary < 8000000 & oBP > 0)
head(combo$OBP)
combo <- subset(combo, salary < 8000000, oBP > 0)
combo <- subset(combo, salary < 8000000)
combo <- subset(combo, OBP > 0)
head(combo$OBP)
combo <- subset(combo, AB >= 450)
head(arrange(combo, desc(OBP)), 10)
options <- head(arrange(combo, desc(OBP)), 10)
options[, c("playerID", "AB", "salary", "OBP")]
