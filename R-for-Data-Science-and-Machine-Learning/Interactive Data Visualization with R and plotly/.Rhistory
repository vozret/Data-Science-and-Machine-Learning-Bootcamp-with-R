library(ggplot2)
df <- mtcars
# creating data and aesthetics layer
pl <- ggplot(data = df, aes(x=wt, y=mpg))
#geometry
(pl + geom_point())
# size, shape, alpha
(pl + geom_point(size=10))
# size, shape, alpha
# size - size of data points
# alpha - prozirnost
(pl + geom_point(size=5, alpha=0.5))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp)))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp)))
# sizing and shaping our point based on other features (parameters)
(pl + geom_point(aes(size=hp)))
# sizing and shaping our point based on other features (parameters)
print(pl + geom_point(aes(size=hp)))
print(pl + geom_point(aes(size=hp)))
print(pl + geom_point(aes(size=cyl)))
print(pl + geom_point(aes(size=factor(cyl))))
print(pl + geom_point(aes(shape=factor(cyl)), size=5))
print(pl + geom_point(aes(shape=factor(cyl), color=factor(cyl)), size=5))
pl2 <- pl + geom_point(size=5, color="blue")
print(pl2)
# hexcodes
pl2 <- pl + geom_point(size=5, color="#43e8d8")
print(pl2)
pl2 <- pl + geom_point(aes(color=hp), size=5)
print(pl2)
pl2 <- pl + geom_point(size=5, color="#43e8d8")
pl2 + scale_color_gradient(low="blue", high="red")
print(pl2)
pl3 <- pl2 + scale_color_gradient(low="blue", high="red")
print(pl3)
pl2 <- pl + geom_point(aes(color=hp), size=5)
pl3 <- pl2 + scale_color_gradient(low="blue", high="red")
print(pl3)
setwd("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Data Visualization Project")
library(ggplot2)
library(data.table)
df <- thread("Economist_Assignment_Data.csv", drop=1)
df <- fread("Economist_Assignment_Data.csv", drop=1)
print(head(df))
pl <- ggplot(df, aes(x=CPI, y=HDI, color=Region)) + geom_point()
print(pl)
pl <- ggplot(df, aes(x=CPI, y=HDI, color=Region)) + geom_point(size=4, shape=1)
print(pl)
pl <- ggplot(df, aes(x=CPI, y=HDI, color=Region)) + geom_point(size=4, shape=3)
print(pl)
pl <- ggplot(df, aes(x=CPI, y=HDI, color=Region)) + geom_point(size=4, shape=1)
print(pl)
# adding trendline
pl2 = pl + geom_smooth(aes(group=1))
print(pl2)
# lm - linear model
pl2 = pl + geom_smooth(aes(group=1), method="lm")
print(pl2)
pl2 = pl + geom_smooth(aes(group=1), method="lm", formula = y~log(x), se=F, color="red")
print(pl2)
pl3 = pl2 + geom_text()
print(pl3)
pl3 = pl2 + geom_text(aes(label=Country))
print(pl3)
# minimize number of labels, select the subset
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan",
"Afghanistan", "Congo", "Greece", "Argentina", "Brazil",
"India", "Italy", "China", "South Africa", "Spane",
"Botswana", "Cape Verde", "Bhutan", "Rwanda", "France",
"United States", "Germany", "Britain", "Barbados", "Norway", "Japan",
"New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color="gray20",
data = subset(df, Country %in% pointsToLabel), check_overlap = TRUE)
print(pl3)
library(ggthemes)
print(pl3 + theme_economist_white())
# adding coordinates
pl4 <- pl3 + scale_x_continuous()
print(pl4)
# adding coordinates
pl4 <- pl3 + scale_x_continuous(limits=(c(0.9, 10.5)), breaks = 1:10)
print(pl4)
print(pl4 + theme_economist_white())
setwd("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Interactive Data Visualization with R and plotly")
install.packages("plotly")
library(ggplot2)
library(plotly)
pl <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
print(pl)
gpl <- ggplotly(pl)
print(gpl)
