library(dplyr)
df <- mtcars
# nesting
result <- arrange(sample_n(filter(df, mpg > 20), size=5), desc(mpg))
print(result)
a <- filter(df, mpg > 20)
b <- sample_n(a, size=5)
result <- arrange(b, desc(mpg))
result <- df %>% filter(mpg>20) %>% sample_n(size=5) %>% arrange(desc(mpg))
print(result)
setwd("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Data Manipulation in R")
setwd("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Training Exercises/Exercises")
library(dplyr)
head(mtcars)
filter(mtcars, mpg > 20)
filter(mtcars, mpg > 20, cyl==6)
# EX 2
head(arrange(mtcars, cyl, desc(wt)))
head(select(mtfcars, mpg, hp))
head(select(mtcars, mpg, hp))
head(distinct(mtcars, gear))
head(mutate(mtcars, Performance = hp/wt))
summarise(mtcars, mean)
summarise(mtcars, mpg_mean = mean(mpg), na.rm=TRUE)
mtcars %>% filter(cyl == 6) %>% summarise(hp_mean = mean(hp))
setwd("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Data Manipulation in R")
install.packages(tidyr)
install.packages('tidyr')
install.packages("data.table")
library(tidyr)
library(data.table)
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9, min=0, max=100)
q2 <- runif(9, min=0, max=100)
q3 <- runif(9, min=0, max=100)
q4 <- runif(9, min=0, max=100)
df <- data.frame(comp=comp,year=yr,Qtr1 = q1,Qtr2 = q2,Qtr3 = q3,Qtr4 = q4)
gather(df, Quarter, Revenue, Qtr1_Qtr4)
gather(df, Quarter, Revenue, Qtr1:Qtr4)
df %>% gather(Quarter, Revenue, Qtr1:Qtr4)
stocks
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocks.gathered <- stocks %>% gather(stock, price, x:Z)
stocks.gathered <- stocks %>% gather(stock, price, X:Z)
stocks
stocks.gathered
head(stocks.gathered)
head(stocks.gathered)
stocks.gatheres %>% spread(stock, price)
stocks.gathered %>% spread(stock, price)
spread(stocks.gatheres, time, price)
spread(stocks.gathered, time, price)
df <- data.frame(x = c(NA, "a.x", "b.y", "c.z"))
df
separate(df, x, c('ABC', "XYZ"))
df <- data.frame(x = c(NA, "a-x", "b_y", "c_z"))
df
separate(data=df, col = x, into = c("abc", "xyz"), sep = "-")
df <- data.frame(x = c(NA, "a-x", "b-y", "c-z"))
df
separate(data=df, col = x, into = c("abc", "xyz"), sep = "-")
df.sep <- separate(data=df, col = x, into = c("abc", "xyz"), sep = "-")
df.sep
unite(df.sep, new.joined.col, abc, xyz)
unite(df.sep, new.joined.col, abc, xyz, sep = "---")
setwd("~/tutorials/Data-Science-and-Machine-Learning-Bootcamp-with-R/R-for-Data-Science-and-Machine-Learning/Data Visualization with ggplot2")
install.packages("ggplot2")
# install.packages("ggplot2")
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
colnames(movies)
head(movies)
pl + geom_histogram()
pl <- ggplot(movies, aes(x = rating))
pl + geom_histogram()
print(pl + geom_histogram())
pl + geom_histogram(binwidth = 0.1)
print(pl + geom_histogram(binwidth = 0.1))
print(pl + geom_histogram(binwidth = 0.1, color='red'))
print(pl + geom_histogram(binwidth = 0.1, color='red', fill="pink"))
print(pl + geom_histogram(binwidth = 0.1, color='red', fill="pink", alpha=0))
print(pl + geom_histogram(binwidth = 0.1, color='red', fill="pink", alpha=1))
print(pl + geom_histogram(binwidth = 0.1, color='red', fill="pink", alpha=0.4))
pl2 <- pl + geom_histogram(binwidth = 0.1, color='red', fill="pink", alpha=0.4)
pl3 <- pl2 + xlab('Movie rating') + ylab("Count")
print(pl3)
print(pl3 + ggtitle("My title"))
# fill out color of histogram based on the counts of the histogram
print(pl + geom_histogram(binwidth = 0.1, aes(fill=..count..)))
